// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestjsDto {
  provider                        = "prisma-generator-nestjs-dto"
  output                          = "../src/prisma/entities"
  outputToNestJsResourceStructure = "false"
  flatResourceStructure           = "false"
  exportRelationModifierClasses   = "true"
  reExport                        = "false"
  createDtoPrefix                 = "Create"
  updateDtoPrefix                 = "Update"
  dtoSuffix                       = "Dto"
  entityPrefix                    = ""
  entitySuffix                    = ""
  classValidation                 = "true"
  fileNamingStyle                 = "camel"
  noDependencies                  = "false"
  outputType                      = "class"
  definiteAssignmentAssertion     = "false"
  requiredResponseApiProperty     = "true"
  prettier                        = "true"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model CashBalance {
  /// @example 8420
  value Int @id

  @@map("cash_balance")
}

model CashBook {
  /// @IsUUID(4)
  /// @example c0287617-9f36-489e-ba72-d462777987e9
  id              String           @id @default(uuid())
  /// @example 2022
  title           String           @unique
  reportingMonths ReportingMonth[]

  @@map("cash_books")
}

model Expense {
  /// @IsUUID(4)
  /// @example c0317617-9f36-489e-ba72-d462777987e9
  id      String  @id @default(uuid())
  /// @example 380
  amount  Int
  /// @example піца
  details String?

  reportingMonth   ReportingMonth @relation(fields: [reportingMonthId], references: [id])
  /// @IsUUID(4)
  /// @example c0297617-9f36-489e-ba72-d462777987e9
  reportingMonthId String         @map("reporting_month_id")

  /// @example 2022-11-27
  reportingDate DateTime @map("reporting_date") @db.Date

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("expenses")
}

model Member {
  /// @IsUUID(4)
  /// @example c0357617-9f36-489e-ba72-d462777987e9
  id             String          @id @default(uuid())
  /// @example Олег
  firstName      String          @map("first_name")
  /// @example Зварицький
  lastName       String          @map("last_name")
  /// @example [MemberStatus.ACTIVE]
  status         MemberStatus
  membershipFees MembershipFee[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("members")
}

model MembershipFee {
  /// @IsUUID(4)
  /// @example c0367617-9f36-489e-ba72-d462777987e9
  id               String         @id @default(uuid())
  /// @example 300
  amount           Int
  reportingMonth   ReportingMonth @relation(fields: [reportingMonthId], references: [id])
  /// @IsUUID(4)
  /// @example c0297617-9f36-489e-ba72-d462777987e9
  reportingMonthId String         @map("reporting_month_id")

  member    Member   @relation(fields: [memberId], references: [id], onDelete: Cascade)
  /// @IsUUID(4)
  /// @example c0357617-9f36-489e-ba72-d462777987e9
  memberId  String   @map("member_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("membership_fees")
}

model ReportingMonth {
  /// @IsUUID(4)
  /// @example c0297617-9f36-489e-ba72-d462777987e9
  id             String          @id @default(uuid())
  /// @example '2022-09-01'
  month          DateTime        @db.Date
  cashBook       CashBook        @relation(fields: [cashBookId], references: [id], onDelete: Cascade)
  /// @IsUUID(4)
  /// @example c0287617-9f36-489e-ba72-d462777987e9
  cashBookId     String          @map("cash_book_id")
  expenses       Expense[]
  membershipFees MembershipFee[]

  @@map("reporting_months")
}

model Token {
  token     String   @unique
  exp       DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @map("user_id")
  userAgent String   @map("user_agent")

  @@map("tokens")
}

model User {
  /// @IsUUID(4)
  /// @example c0377617-9f36-489e-ba72-d462777987e9
  id       String    @id @default(uuid())
  /// @example test@gmail.com
  /// @IsEmail
  email    String    @unique
  /// @example secret_password
  /// @MinLength(6)
  password String?
  provider Provider?
  /// @example [Role.USER]
  roles    Role[]
  tokens   Token[]

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("users")
}

enum MemberStatus {
  ACTIVE
  INACTIVE
}

enum Provider {
  GOOGLE
}

enum Role {
  ADMIN
  USER
}
